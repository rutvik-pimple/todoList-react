{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","addTodo","useState","id","task","completed","todo","setTodo","className","onSubmit","e","preventDefault","trim","uuidv4","TextField","label","type","name","value","onChange","target","Button","Todo","toggleComplete","removeTodo","editTodo","enableEdit","setEnableEdit","newTask","setTask","onClick","ListItem","style","display","Checkbox","checked","Typography","variant","textDecoration","IconButton","TodoList","todos","List","map","LOCAL_STORAGE_KEY","App","setTodos","useEffect","storageTodos","JSON","parse","localStorage","getItem","setItem","stringify","padding","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4a0ea17.chunk.js","sourcesContent":["import { Button, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nfunction TodoForm({ addTodo }) {\r\n  const [todo, setTodo] = useState({\r\n    id: \"\",\r\n    task: \"\",\r\n    completed: false\r\n  });\r\n\r\n  function handleTaskInputChange(e) {\r\n    // e.target.value contains new input from onChange\r\n    // event for input elements\r\n    setTodo({ ...todo, task: e.target.value });\r\n  }\r\n\r\n  \r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault(); // prevents browser refresh\r\n    // trim() gets rid of string whitespace\r\n    if (todo.task.trim()) {\r\n      addTodo({ ...todo, id: uuidv4() });\r\n      setTodo({ ...todo, task: \"\" });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n      <TextField\r\n        label=\"Task\"\r\n        type=\"text\"\r\n        name=\"task\"\r\n        value={todo.task}\r\n        onChange={handleTaskInputChange}\r\n      />\r\n      <Button type=\"submit\">Submit</Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;","import { Checkbox, IconButton, ListItem, Typography } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport React,{useState} from \"react\";\r\n\r\nfunction Todo({ todo, toggleComplete, removeTodo, editTodo }) {\r\n  const [enableEdit, setEnableEdit] = useState(false);\r\n  const [newTask,setTask] = useState({task:\"\"})\r\n\r\n  function handleEditClick(){\r\n    setEnableEdit(true);\r\n  }\r\n\r\n  function handleTaskEdit(e){\r\n    setTask({task:e.target.value}) \r\n    \r\n  }\r\n  \r\n  function submit(){\r\n    editTodo(todo.id,newTask.task)\r\n    setEnableEdit(false);\r\n  }\r\n\r\n  function handleCheckboxClick() {\r\n    toggleComplete(todo.id);\r\n  }\r\n\r\n  function handleRemoveClick() {\r\n    removeTodo(todo.id);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {enableEdit ? (\r\n      <>\r\n      <TextField\r\n        label=\"Task\"\r\n        type=\"text\"\r\n        name=\"task\"\r\n        onChange={handleTaskEdit}\r\n      />\r\n      <Button onClick={submit}>Do</Button>\r\n\r\n      </>\r\n    ):(\r\n      <>\r\n      <ListItem style={{ display: \"flex\" }}>\r\n      <Checkbox checked={todo.completed} onClick={handleCheckboxClick} />\r\n      <Typography\r\n        variant=\"body1\"\r\n        style={{\r\n          textDecoration: todo.completed ? \"line-through\" : null\r\n        }}\r\n      >\r\n        {todo.task}\r\n      </Typography>\r\n      <IconButton onClick={handleRemoveClick}>\r\n        <CloseIcon />\r\n      </IconButton>\r\n      <IconButton onClick={handleEditClick}>\r\n        <EditIcon />\r\n      </IconButton>\r\n    </ListItem>\r\n      </>\r\n    )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import { List } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoList({ todos, removeTodo, toggleComplete, editTodo }) {\r\n  return (\r\n    <List>\r\n      {todos.map(todo => (\r\n        <Todo\r\n          key={todo.id}\r\n          todo={todo}\r\n          removeTodo={removeTodo}\r\n          toggleComplete={toggleComplete}\r\n          editTodo={editTodo}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import Typography from \"@material-ui/core/Typography\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\n\nconst LOCAL_STORAGE_KEY = \"react-todo-list-todos\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    // fires when app component mounts to the DOM\n    const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storageTodos) {\n      setTodos(storageTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n    // fires when todos array gets updated\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function addTodo(todo) {\n    // adds new todo to beginning of todos array\n    setTodos([todo, ...todos]);\n  }\n\n  function toggleComplete(id) {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed\n          };\n        }\n        return todo;\n      })\n    );\n  }\n\n  function editTodo(id,task) {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            task: task\n          };\n        }\n        return todo;\n      })\n    );\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  return (\n    <div className=\"App\">\n      <Typography style={{ padding: 16 }} variant=\"h2\">\n        My Todo List\n      </Typography>\n      <Typography style={{ padding: 5 }} variant=\"p\">\n        Add your text here to keep track of your todos !\n      </Typography>\n      <TodoForm addTodo={addTodo} />\n      <TodoList\n        todos={todos}\n        removeTodo={removeTodo}\n        toggleComplete={toggleComplete}\n        editTodo={editTodo}\n      />\n    </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}